<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.mapper.UsersMapper" >
  <resultMap id="BaseResultMap" type="com.example.entity.Users" >
    <id column="userID" property="userid" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="learnNum" property="learnnum" jdbcType="INTEGER" />
    <result column="reviewNum" property="reviewnum" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="pronunciation" property="pronunciation" jdbcType="VARCHAR" />
    <result column="node" property="node" jdbcType="BIT" />
    <result column="time" property="time" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    userID, password, learnNum, reviewNum, name, pronunciation, node, time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.example.entity.UsersExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from users
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from users
    where userID = #{userid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from users
    where userID = #{userid,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.entity.UsersExample" >
    delete from users
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.entity.Users" >
    insert into users (userID, password,name, pronunciation,
      node, time)
    values (#{userid,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},#{name,jdbcType=VARCHAR}, #{pronunciation,jdbcType=VARCHAR},
      #{node,jdbcType=BIT}, #{time,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.example.entity.Users" >
    insert into users
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userid != null" >
        userID,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="learnnum != null" >
        learnNum,
      </if>
      <if test="reviewnum != null" >
        reviewNum,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="pronunciation != null" >
        pronunciation,
      </if>
      <if test="node != null" >
        node,
      </if>
      <if test="time != null" >
        time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userid != null" >
        #{userid,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="learnnum != null" >
        #{learnnum,jdbcType=INTEGER},
      </if>
      <if test="reviewnum != null" >
        #{reviewnum,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="pronunciation != null" >
        #{pronunciation,jdbcType=VARCHAR},
      </if>
      <if test="node != null" >
        #{node,jdbcType=BIT},
      </if>
      <if test="time != null" >
        #{time,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.entity.UsersExample" resultType="java.lang.Integer" >
    select count(*) from users
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update users
    <set >
      <if test="record.userid != null" >
        userID = #{record.userid,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null" >
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.learnnum != null" >
        learnNum = #{record.learnnum,jdbcType=INTEGER},
      </if>
      <if test="record.reviewnum != null" >
        reviewNum = #{record.reviewnum,jdbcType=INTEGER},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.pronunciation != null" >
        pronunciation = #{record.pronunciation,jdbcType=VARCHAR},
      </if>
      <if test="record.node != null" >
        node = #{record.node,jdbcType=BIT},
      </if>
      <if test="record.time != null" >
        time = #{record.time,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update users
    set userID = #{record.userid,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      learnNum = #{record.learnnum,jdbcType=INTEGER},
      reviewNum = #{record.reviewnum,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      pronunciation = #{record.pronunciation,jdbcType=VARCHAR},
      node = #{record.node,jdbcType=BIT},
      time = #{record.time,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.entity.Users" >
    update users
    <set >
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="learnnum != null" >
        learnNum = #{learnnum,jdbcType=INTEGER},
      </if>
      <if test="reviewnum != null" >
        reviewNum = #{reviewnum,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="pronunciation != null" >
        pronunciation = #{pronunciation,jdbcType=VARCHAR},
      </if>
      <if test="node != null" >
        node = #{node,jdbcType=BIT},
      </if>
      <if test="time != null" >
        time = #{time,jdbcType=TIMESTAMP},
      </if>
    </set>
    where userID = #{userid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.entity.Users" >
    update users
    set password = #{password,jdbcType=VARCHAR},
      learnNum = #{learnnum,jdbcType=INTEGER},
      reviewNum = #{reviewnum,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      pronunciation = #{pronunciation,jdbcType=VARCHAR},
      node = #{node,jdbcType=BIT},
      time = #{time,jdbcType=TIMESTAMP}
    where userID = #{userid,jdbcType=VARCHAR}
  </update>
</mapper>