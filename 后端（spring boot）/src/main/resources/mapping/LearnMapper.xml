<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.mapper.LearnMapper" >
  <resultMap id="BaseResultMap" type="com.example.entity.Learn" >
    <id column="userID" property="userid" jdbcType="VARCHAR" />
    <id column="bookID" property="bookid" jdbcType="INTEGER" />
    <id column="word" property="word" jdbcType="VARCHAR" />
    <result column="master" property="master" jdbcType="INTEGER" />
    <result column="collect" property="collect" jdbcType="BIT" />
    <result column="date" property="date" jdbcType="DATE" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    userID, bookID, word, master, collect, date
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.example.entity.LearnExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from learn
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="com.example.entity.LearnKey" >
    select 
    <include refid="Base_Column_List" />
    from learn
    where userID = #{userid,jdbcType=VARCHAR}
      and bookID = #{bookid,jdbcType=INTEGER}
      and word = #{word,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.example.entity.LearnKey" >
    delete from learn
    where userID = #{userid,jdbcType=VARCHAR}
      and bookID = #{bookid,jdbcType=INTEGER}
      and word = #{word,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.entity.LearnExample" >
    delete from learn
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.entity.Learn" >
    insert into learn (userID, bookID, word, 
      master,date)
    values (#{userid,jdbcType=VARCHAR}, #{bookid,jdbcType=INTEGER}, #{word,jdbcType=VARCHAR}, 
      #{master,jdbcType=INTEGER},#{date,jdbcType=DATE})
  </insert>
  <insert id="insertSelective" parameterType="com.example.entity.Learn" >
    insert into learn
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userid != null" >
        userID,
      </if>
      <if test="bookid != null" >
        bookID,
      </if>
      <if test="word != null" >
        word,
      </if>
      <if test="master != null" >
        master,
      </if>
      <if test="collect != null" >
        collect,
      </if>
      <if test="date != null" >
        date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userid != null" >
        #{userid,jdbcType=VARCHAR},
      </if>
      <if test="bookid != null" >
        #{bookid,jdbcType=INTEGER},
      </if>
      <if test="word != null" >
        #{word,jdbcType=VARCHAR},
      </if>
      <if test="master != null" >
        #{master,jdbcType=INTEGER},
      </if>
      <if test="collect != null" >
        #{collect,jdbcType=BIT},
      </if>
      <if test="date != null" >
        #{date,jdbcType=DATE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.entity.LearnExample" resultType="java.lang.Integer" >
    select count(*) from learn
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update learn
    <set >
      <if test="record.userid != null" >
        userID = #{record.userid,jdbcType=VARCHAR},
      </if>
      <if test="record.bookid != null" >
        bookID = #{record.bookid,jdbcType=INTEGER},
      </if>
      <if test="record.word != null" >
        word = #{record.word,jdbcType=VARCHAR},
      </if>
      <if test="record.master != null" >
        master = #{record.master,jdbcType=INTEGER},
      </if>
      <if test="record.collect != null" >
        collect = #{record.collect,jdbcType=BIT},
      </if>
      <if test="record.date != null" >
        date = #{record.date,jdbcType=DATE},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update learn
    set userID = #{record.userid,jdbcType=VARCHAR},
      bookID = #{record.bookid,jdbcType=INTEGER},
      word = #{record.word,jdbcType=VARCHAR},
      master = #{record.master,jdbcType=INTEGER},
      collect = #{record.collect,jdbcType=BIT},
      date = #{record.date,jdbcType=DATE}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.entity.Learn" >
    update learn
    <set >
      <if test="master != null" >
        master = #{master,jdbcType=INTEGER},
      </if>
      <if test="collect != null" >
        collect = #{collect,jdbcType=BIT},
      </if>
      <if test="date != null" >
        date = #{date,jdbcType=DATE},
      </if>
    </set>
    where userID = #{userid,jdbcType=VARCHAR}
      and bookID = #{bookid,jdbcType=INTEGER}
      and word = #{word,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.entity.Learn" >
    update learn
    set master = #{master,jdbcType=INTEGER},
      collect = #{collect,jdbcType=BIT},
      date = #{date,jdbcType=DATE}
    where userID = #{userid,jdbcType=VARCHAR}
      and bookID = #{bookid,jdbcType=INTEGER}
      and word = #{word,jdbcType=VARCHAR}
  </update>
</mapper>